/// Represents a specific translation of a track's lyrics.
class Translation {
  final int? id; // Local DB ID (optional, auto-increment)
  final String trackId; // Foreign key referencing the Track (required)
  final String languageCode; // Target language code (e.g., 'en', 'zh-CN') (required)
  final String style; // Translation style identifier (e.g., 'faithful') (required)
  final String translatedLyrics; // The translated lyrics text (required)
  final int generatedAt; // Timestamp when generated/saved (required)

  Translation({
    this.id,
    required this.trackId,
    required this.languageCode,
    required this.style,
    required this.translatedLyrics,
    required this.generatedAt,
  });

  /// Creates a Translation instance from a map (e.g., from SQFlite query).
  factory Translation.fromMap(Map<String, dynamic> map) {
    return Translation(
      id: map['id'] as int?,
      trackId: map['trackId'] as String,
      languageCode: map['languageCode'] as String,
      style: map['style'] as String,
      translatedLyrics: map['translatedLyrics'] as String,
      generatedAt: map['generatedAt'] as int,
    );
  }

  /// Converts this Translation instance into a map (e.g., for SQFlite insertion).
  /// Excludes 'id' because it's auto-generated by the database.
  Map<String, dynamic> toMap() {
    return {
      'trackId': trackId,
      'languageCode': languageCode,
      'style': style,
      'translatedLyrics': translatedLyrics,
      'generatedAt': generatedAt,
    };
  }

  @override
  String toString() {
    return 'Translation{id: $id, trackId: $trackId, languageCode: $languageCode, style: $style, generatedAt: $generatedAt}'; // Note: omitting potentially long translatedLyrics
  }
} 